# version control for docker compose in case new versions are released
version: "3.9"

services:
  # name the service app
  app:
    build:
      # builds service into current directory
      context: .
      # establishes that this is being used for dev? i think is an argument we can pass in when spinning up the container that specifies it's being used for dev
      args:
        - DEV=true
    ports:
      # networking maps port 8000 in container to 8000 in localhost
      - "8000:8000"
    volumes:
      # syncs ./app folder in container to /app folder in localhost
      - ./app:/app
    # default command when starting up container - in this case it spins up the django server
    command: >
      sh -c "python manage.py wait_for_db && 
             python manage.py makemigrations &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      # through docker compose you can use the name of the service [db] as the hose name
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      # db needs to start before app
      - db
  
  db:
    image: postgres:13-alpine
    volumes:
      # localhost / docker volume data storage we're mapping that to folder location in container to keep persistent data
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme


volumes:
  # default location where docker stores volume data [do more research on docker lol]
  dev-db-data: